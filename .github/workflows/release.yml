name: Release

on:
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-web:
    name: Build Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile || yarn install --immutable

      - name: Typecheck
        run: npx tsc -b --noEmit --pretty false

      - name: Build
        run: yarn build

      - name: Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist
          if-no-files-found: error

  electron-pack:
    name: Package Electron App
    runs-on: macos-latest
    needs: build-web
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile || yarn install --immutable

      - name: Build web inside electron app
        run: yarn build

      - name: Create simple dmg (zip) of electron folder
        run: |
          mkdir -p release
          zip -r release/ainodeagent-macos-${{ github.ref_name }}.zip electron index.html dist package.json README.md

      - name: Upload electron artifact
        uses: actions/upload-artifact@v4
        with:
          name: electron-macos-zip
          path: release/*.zip
          if-no-files-found: error

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-web, electron-pack]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate release notes
        id: notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.body || 'Automated release' }}
          generate_release_notes: true
          files: |
            artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
